{"ast":null,"code":"import _slicedToArray from \"/home/jamie/my-app-2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/jamie/my-app-2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jamie/my-app-2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jamie/my-app-2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jamie/my-app-2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jamie/my-app-2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jamie/my-app-2/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board() {\n    _classCallCheck(this, Board);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Board).apply(this, arguments));\n  }\n\n  _createClass(Board, [{\n    key: \"renderSquare\",\n    value: function renderSquare(i) {\n      var _this = this;\n\n      return React.createElement(Square, {\n        value: this.props.squares[i],\n        onClick: function onClick() {\n          return _this.props.onClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game(props) {\n    var _this2;\n\n    _classCallCheck(this, Game);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this2.state = {\n      colCount: 3,\n      rowCount: 3,\n      history: [{\n        squares: Array(9).fill(null),\n        moves: []\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n    return _this2;\n  }\n\n  _createClass(Game, [{\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var iRow = Math.floor(i / this.state.colCount);\n      var iCol = i - iRow * this.state.colCount;\n      var history = this.state.history.slice(0, this.state.stepNumber + 1);\n      var current = history[history.length - 1];\n      var squares = current.squares.slice();\n      var moves = current.moves.slice();\n\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? \"X\" : \"O\"; //moves[history.length] = [squares[i], i]\n\n      moves[history.length] = [squares[i], i, [iRow, iCol]];\n      this.setState({\n        history: history.concat([{\n          squares: squares,\n          moves: moves\n        }]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  }, {\n    key: \"jumpTo\",\n    value: function jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: step % 2 === 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var history = this.state.history;\n      var current = history[this.state.stepNumber];\n      var winner = calculateWinner(current.squares);\n      var moves = history.map(function (step, move) {\n        var previousMove = step.moves[Math.max(step.moves.length - 1)];\n        var desc = move ? //'Go to move #' + move:\n        'Go to move #' + move + ' ' + previousMove : 'Go to game start';\n        return React.createElement(\"li\", {\n          key: move,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this3.jumpTo(move);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, desc));\n      }); //Display the location for each move in the format (col, row) in the move history list.\n      // ie. 2. {Go To Move 2 [X @ (1,3)]}\n\n      var status;\n\n      if (winner) {\n        status = \"Winner: \" + winner;\n      } else {\n        status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Board, {\n        squares: current.squares,\n        onClick: function onClick(i) {\n          return _this3.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, status), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, moves)));\n    }\n  }]);\n\n  return Game;\n}(React.Component); // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141\n  },\n  __self: this\n}), document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/home/jamie/my-app-2/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","i","squares","renderSquare","Component","Game","state","colCount","rowCount","history","Array","fill","moves","stepNumber","xIsNext","iRow","Math","floor","iCol","slice","current","length","calculateWinner","setState","concat","step","winner","map","move","previousMove","max","desc","jumpTo","status","handleClick","render","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colCount: 3,\n      rowCount: 3,\n      history: [\n        {\n          squares: Array(9).fill(null),\n          moves: []\n        }\n      ],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const iRow = Math.floor((i) / this.state.colCount)\n    const iCol = (i) - ((iRow)*this.state.colCount)\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    const moves = current.moves.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    //moves[history.length] = [squares[i], i]\n    moves[history.length] = [squares[i], i, [iRow, iCol]]\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares,\n          moves: moves\n        }\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const previousMove = step.moves[Math.max(step.moves.length - 1)];\n      const desc = move ?\n        //'Go to move #' + move:\n        'Go to move #' + move + ' ' + previousMove:\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n    //Display the location for each move in the format (col, row) in the move history list.\n    // ie. 2. {Go To Move 2 [X @ (1,3)]}\n\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={i => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n"]},"metadata":{},"sourceType":"module"}